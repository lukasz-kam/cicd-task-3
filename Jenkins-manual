pipeline {
    agent none

    stages {
        stage('Checkout, build and test') {
            agent {
                docker {
                    image 'node:alpine3.20'
                }
            }
            stages {
                stage('Checkout'){
                    steps {
                        git(
                            url: 'https://github.com/lukasz-kam/cicd-task-3',
                            branch: "${params.ENVIRONMENT}"
                        )
                        stash name: 'source-code', includes: '**/*'
                    }
                }
                stage('Build'){
                    steps {
                        script {
                            echo "Build started..."
                            sh 'chmod +x ./scripts/build.sh'
                            sh '. ./scripts/build.sh'
                        }
                    }
                }
                stage('Test'){
                    steps {
                        script {
                            echo "Test started..."
                            sh 'chmod +x ./scripts/test.sh'
                            sh '. ./scripts/test.sh'
                        }
                    }
                }
            }
        }
        stage('Docker build, deploy and cleanup'){
            agent {
                docker {
                    image 'docker:latest'
                    args '-v /var/run/docker.sock:/var/run/docker.sock --user 1000:999'
                }
            }
            environment {
                HOME = "${env.WORKSPACE}"
                PORT = "${params.ENVIRONMENT == 'main' ? '3000' : (params.ENVIRONMENT == 'dev' ? '3001' : '5000')}"
            }
            stages {
                stage('Build'){
                    steps {
                        script {
                            unstash 'source-code'
                            sh "docker build -t node${params.ENVIRONMENT}:${params.IMAGE_TAG} ."
                        }
                    }
                }
                stage('Deploy'){
                    steps {
                        script {
                            sh "docker ps -aq --filter label=env=${params.ENVIRONMENT} | xargs -r docker rm -f"
                            sh "docker run -d --label env=${params.ENVIRONMENT} --expose ${PORT} -p ${PORT}:3000 node${params.ENVIRONMENT}:${params.IMAGE_TAG}"
                        }
                    }
                }
                stage('Cleanup'){
                    steps {
                        script {
                            sh "docker image prune -f 2> /dev/null"
                            sh "docker volume prune -f 2> /dev/null"
                        }
                    }
                }
            }
        }
    }
}